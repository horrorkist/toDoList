{"version":3,"sources":["theme.ts","atoms.tsx","components/CreateToDo.tsx","components/ToDoList.tsx","components/ManageCategory.tsx","components/SelectCategory.tsx","App.tsx","index.tsx"],"names":["darkTheme","bgColor","textColor","accentColor","Categories","ToDo","Doing","Done","categoryState","atom","key","default","localStorage","getItem","JSON","parse","currentBoard","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","Wrapper","styled","div","CreateToDo","useForm","register","handleSubmit","setValue","board","useRecoilValue","useRecoilState","allToDos","setAllToDos","useEffect","setItem","stringify","onSubmit","oldToDos","text","id","Date","now","required","maxLength","type","placeholder","Buttons","ToDoList","map","Object","keys","element","onClick","targetIndex","findIndex","slice","deleteToDo","Button","props","isActive","Form","form","ManageCategory","register2","handleSubmit2","setValue2","setCategory","useSetRecoilState","useState","active","setActive","prev","className","newCategory","newCategories","deleteCategory","find","e","length","window","confirm","oldCategories","updated","updatedToDos","alert","SelectWrapper","Label","label","SelectCategory","setBoard","htmlFor","onChange","currentTarget","value","name","GlobalStyle","createGlobalStyle","theme","Title","App","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.c3c8de5c.chunk.js","sourcesContent":["import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n};\n","import { atom, selector } from \"recoil\";\n\nexport const Categories = {\n  ToDo: \"ToDo\",\n  Doing: \"Doing\",\n  Done: \"Done\",\n};\n\nexport interface ICategory {\n  [key: string]: string;\n}\n\ninterface IToDo {\n  text: string;\n  id: number;\n  category: string;\n}\n\nexport const categoryState = atom<ICategory>({\n  key: \"categories\",\n  default: localStorage.getItem(\"categories\")\n    ? JSON.parse(localStorage.getItem(\"categories\") || \"\")\n    : Categories,\n});\n\nexport const currentBoard = atom({\n  key: \"board\",\n  default: localStorage.getItem(\"board\") || Categories.ToDo,\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDos\",\n  default:\n    localStorage.getItem(\"toDos\") !== null\n      ? JSON.parse(localStorage.getItem(\"toDos\") || \"\")\n      : [],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(currentBoard);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { currentBoard, toDoState } from \"../atoms\";\nimport { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n`;\n\nfunction CreateToDo() {\n  const { register, handleSubmit, setValue } = useForm();\n  const board = useRecoilValue(currentBoard);\n  const [allToDos, setAllToDos] = useRecoilState(toDoState);\n\n  const onSubmit = ({ toDo }: any) => {\n    setAllToDos((oldToDos) => {\n      return [...oldToDos, { text: toDo, id: Date.now(), category: board }];\n    });\n    setValue(\"toDo\", \"\");\n  };\n\n  useEffect(() => {\n    const saveToDos = () => {\n      localStorage.setItem(\"toDos\", JSON.stringify(allToDos));\n    };\n    saveToDos();\n  }, [allToDos]);\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          {...register(\"toDo\", { required: true, maxLength: 20 })}\n          type=\"text\"\n          placeholder=\"Add a ToDo...\"\n        />\n        <button>Add</button>\n      </form>\n    </Wrapper>\n  );\n}\n\nexport default CreateToDo;\n","import { useRecoilState, useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { categoryState, toDoSelector, toDoState } from \"../atoms\";\nimport { useEffect } from \"react\";\n\nconst Wrapper = styled.div``;\n\nconst ToDo = styled.div`\n  width: 300px;\n  padding: 10px 20px;\n  border-radius: 20px;\n  height: 100px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n  border: 1px solid white;\n  margin-bottom: 15px;\n  background-color: #081229;\n  font-size: 20px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  button {\n    border: none;\n    cursor: pointer;\n  }\n`;\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const [allToDos, setAllToDos] = useRecoilState(toDoState);\n  const [category, setCategory] = useRecoilState(categoryState);\n\n  const onClick = (id: number, category: string) => {\n    const targetIndex = allToDos.findIndex((toDo) => toDo.id === id);\n    setAllToDos((oldToDos) => {\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        {\n          id,\n          text: oldToDos[targetIndex].text,\n          category,\n        },\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n\n  const deleteToDo = (id: number) => {\n    const targetIndex = allToDos.findIndex((toDo) => toDo.id === id);\n    setAllToDos((oldToDos) => {\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n\n  useEffect(() => {\n    const saveToDos = () => {\n      localStorage.setItem(\"toDos\", JSON.stringify(allToDos));\n    };\n    saveToDos();\n  }, [allToDos]);\n\n  return (\n    <Wrapper>\n      {toDos.map((toDo) => (\n        <ToDo key={toDo.id}>\n          <span>{toDo.text}</span>\n          <Buttons>\n            {Object.keys(category).map((element) => {\n              if (toDo.category !== element) {\n                return (\n                  <button\n                    key={element}\n                    onClick={() => onClick(toDo.id, element)}\n                  >\n                    {element}\n                  </button>\n                );\n              }\n            })}\n            {/* {toDo.category !== Categories.ToDo ? (\n              <button onClick={() => onClick(toDo.id, Categories.ToDo)}>\n                To Do\n              </button>\n            ) : null}\n            {toDo.category !== Categories.Doing ? (\n              <button onClick={() => onClick(toDo.id, Categories.Doing)}>\n                Doing\n              </button>\n            ) : null}\n            {toDo.category !== Categories.Done ? (\n              <button onClick={() => onClick(toDo.id, Categories.Done)}>\n                Done\n              </button>\n            ) : null} */}\n            <button onClick={() => deleteToDo(toDo.id)}>Delete</button>\n          </Buttons>\n        </ToDo>\n      ))}\n    </Wrapper>\n  );\n}\n\nexport default ToDoList;\n","import { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { categoryState, ICategory, toDoState } from \"../atoms\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  position: absolute;\n  align-items: center;\n  top: 0;\n  bottom: 0;\n  right: -600px;\n`;\n\nconst Button = styled.div<{ isActive: boolean }>`\n  width: 30px;\n  height: 30px;\n  border: 2px solid white;\n  border-radius: 50%;\n  margin-right: 15px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  div {\n    position: absolute;\n    :first-child {\n      width: 20px;\n      height: 2px;\n      background-color: white;\n    }\n    :last-child {\n      display: ${(props) => (props.isActive ? \"none\" : \"block\")};\n      width: 2px;\n      height: 20px;\n      background-color: white;\n    }\n  }\n`;\n\nconst Form = styled.form`\n  transform: scaleX(0);\n  opacity: 0;\n  transition: all 0.5s ease;\n  transform-origin: center left;\n  margin-right: 20px;\n  &.active {\n    transform: scaleX(1);\n    opacity: 1;\n  }\n`;\n\nfunction ManageCategory() {\n  const { register, handleSubmit, setValue } = useForm();\n  const {\n    register: register2,\n    handleSubmit: handleSubmit2,\n    setValue: setValue2,\n  } = useForm();\n  const [category, setCategory] = useRecoilState(categoryState);\n  const setAllToDos = useSetRecoilState(toDoState);\n\n  const onAddSubmit = ({ newCategory }: any) => {\n    const newCategories = {\n      ...category,\n      [newCategory]: newCategory,\n    };\n    setCategory(newCategories);\n    setValue(\"newCategory\", \"\");\n  };\n\n  const onDeleteSubmit = ({ deleteCategory }: any) => {\n    if (!Object.keys(category).find((e: any) => e === deleteCategory)) {\n      window.alert(\"No such category exists.\");\n      return;\n    } else if (Object.keys(category).length === 1) {\n      window.alert(\"You must have at least one category.\");\n      return;\n    } else if (window.confirm(\"All ToDos in this category will be lost.\")) {\n      setCategory((oldCategories) => {\n        const updated: ICategory = {};\n        Object.keys(oldCategories).map((e) => {\n          if (e !== deleteCategory) {\n            updated[e] = oldCategories[e];\n          }\n        });\n        return { ...updated };\n      });\n      setAllToDos((oldToDos) => {\n        const updatedToDos = oldToDos.filter(\n          (toDo) => toDo.category !== deleteCategory\n        );\n        return [...updatedToDos];\n      });\n      setValue2(\"deleteCategory\", \"\");\n    }\n  };\n\n  const [active, setActive] = useState(false);\n  const onClick = () => {\n    setActive((prev) => !prev);\n  };\n\n  useEffect(() => {\n    const saveCategories = () => {\n      localStorage.setItem(\"categories\", JSON.stringify(category));\n    };\n    saveCategories();\n  }, [category]);\n\n  return (\n    <Wrapper>\n      <Button isActive={active} onClick={onClick}>\n        <div></div>\n        <div></div>\n      </Button>\n      <Form\n        className={active ? \"active\" : \"\"}\n        onSubmit={handleSubmit(onAddSubmit)}\n      >\n        <input\n          {...register(\"newCategory\", { required: true, maxLength: 15 })}\n          type=\"text\"\n          placeholder=\"Add New Category...\"\n        />\n        <button>Add</button>\n      </Form>\n      <Form\n        className={active ? \"active\" : \"\"}\n        onSubmit={handleSubmit2(onDeleteSubmit)}\n      >\n        <input\n          {...register2(\"deleteCategory\", { required: true, maxLength: 15 })}\n          type=\"text\"\n          placeholder=\"Delete Category...\"\n        />\n        <button>Delete</button>\n      </Form>\n    </Wrapper>\n  );\n}\n\nexport default ManageCategory;\n","import styled from \"styled-components\";\nimport { useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { categoryState, currentBoard } from \"../atoms\";\nimport ManageCategory from \"./ManageCategory\";\n\nconst Wrapper = styled.div`\n  margin-bottom: 20px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst SelectWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 200px;\n`;\n\nconst Label = styled.label`\n  font-size: 20px;\n  color: white;\n`;\n\nfunction SelectCategory() {\n  const [board, setBoard] = useRecoilState(currentBoard);\n  const [category, setCategory] = useRecoilState(categoryState);\n  useEffect(() => {\n    const saveCurrentBoard = () => {\n      localStorage.setItem(\"board\", board + \"\");\n    };\n    saveCurrentBoard();\n  }, [board]);\n  return (\n    <Wrapper>\n      <SelectWrapper>\n        <Label htmlFor=\"board\">Category: </Label>\n        <select\n          onChange={(e) => {\n            setBoard(e.currentTarget.value);\n          }}\n          name=\"board\"\n          id=\"board\"\n          value={board}\n        >\n          {Object.keys(category).map((element) => {\n            return (\n              <option key={element} value={element}>\n                {element}\n              </option>\n            );\n          })}\n          {/* <option value={Categories.ToDo}>To Do</option>\n          <option value={Categories.Doing}>Doing</option>\n          <option value={Categories.Done}>Done</option> */}\n        </select>\n        <ManageCategory></ManageCategory>\n      </SelectWrapper>\n    </Wrapper>\n  );\n}\n\nexport default SelectCategory;\n","import React from \"react\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { darkTheme } from \"./theme\";\nimport CreateToDo from \"./components/CreateToDo\";\nimport ToDoList from \"./components/ToDoList\";\nimport SelectCategory from \"./components/SelectCategory\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n\tbackground-color: ${(props) => props.theme.bgColor};\n}\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #212121;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.div`\n  color: whitesmoke;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 32px;\n`;\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <GlobalStyle />\n      <Wrapper>\n        <Title>To Do List</Title>\n        <SelectCategory></SelectCategory>\n        <CreateToDo></CreateToDo>\n        <ToDoList></ToDoList>\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <RecoilRoot>\n        <App />\n      </RecoilRoot>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}